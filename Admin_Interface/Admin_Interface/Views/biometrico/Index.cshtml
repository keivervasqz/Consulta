@using Admin_Interface.Models;
@using Admin_Interface.Models.Request;

@model PaginadorBiometrico<biometricos>

@{
    ViewBag.Title = "Biométricos";
    List<subdivisionRequest> listsubdivision = (List<subdivisionRequest>)ViewBag.Subdivision;
    List<biometricos> biometrico = (List<biometricos>)ViewBag.biometrico;
    List<SelectListItem> itembio = new List<SelectListItem>();
    List<SelectListItem> itemsub = new List<SelectListItem>();

    foreach (biometricos s in biometrico)
    {
        SelectListItem selListItem = new SelectListItem() 
        { 
            Value = s.id.ToString(), 
            Text = s.ip.ToString()
        };
        itembio.Add(selListItem);
    }

    foreach (subdivisionRequest s in listsubdivision)
    {
        SelectListItem selListItem = new SelectListItem() 
        { 
            Value = s.id.ToString(), 
            Text = s.nombre.ToString()
        };
        itemsub.Add(selListItem);
    }
}

<h2>Biométricos</h2>

<hr />

<input type="hidden" id="page" value="Biometricos" />

<div class="form-inline">
    <form method="get" action=@Url.Action("Index", "biometrico")>
        <div class="row">
            <div class="col-xs-12 col-sm-10">
                <div class="col-xs-12 col-sm-4 col-md-3 col-lg-3 form-group">
                    <select class="form-control" id="dirIp" name="dirIp">
                        <option selected="selected" disabled="disabled">Dirección IP</option>
                        @foreach (SelectListItem item in itembio){
                            <option value="@Html.DisplayFor(model => item.Value)">@Html.DisplayFor(model => item.Text)</option>
                        }
                    </select>
                </div>

                <div class="col-xs-12 col-sm-4 col-md-3 col-lg-3 form-group">
                    <select class="form-control" id="model" name="model">
                        <option selected="selected" disabled="disabled">Seleccione Modelo</option>
                        <option value="3nStar">3nStar</option>
                        <option value="ZKteco">ZKteco</option>
                    </select>
                </div>

                <div class="col-xs-12 col-sm-4 col-md-3 col-lg-3 form-group">
                    <select class="form-control" id="subdiv" name="subdiv">
                        <option selected="selected" disabled="disabled">Subdivision</option>
                        @foreach (SelectListItem item in itemsub){
                            <option value="@Html.DisplayFor(model => item.Value)">@Html.DisplayFor(model => item.Text)</option>
                        }
                    </select>
                </div>

                <div class="col-xs-12 col-sm-4 col-md-3 col-lg-3 form-group">
                    <select class="form-control" id="status" name="status">
                        <option value="" selected="selected" disabled="disabled">Seleccione Estatus</option>
                        <option value="1">Activo</option>
                        <option value="0">Inactivo</option>
                    </select>
                </div>
            </div>

            <div class="col-xs-12 col-sm-2">
                <button id="btn-buscar" class="btn btn-success col-xs-12" type="submit">Buscar</button>
            </div>
        </div>
    </form>
</div>

<hr />

<div class="resalt form-group col-xs-12 ">
    <div class="form-group">
        <h3 class="h3-table">Biométricos Registrados</h3>
    
        <a href="@Url.Action("Index", "UserBiometric")" class="create-intable"  >
            <input type="button" class="btn btn-success" value="Configuración de Biométricos" />
        </a>

        <a href="@Url.Action("Create", "biometrico")" class="create-intable col-sm-2 col-md-2"  >
            <input type="button" class="btn btn-success" value="Nuevo Biométrico"/>
        </a>

    </div>
    <table class="table table-responsive table-striped">
        <tr>
            <th>Direción IP</th>
            <th>Modelo</th>
            <th>Subdivisión</th>
            <th>Estatus</th>
            <th class="text-right"><div class="td-icon-table">Acciones</div></th>
        </tr>
        @foreach (var item in Model.Resultado) {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ip)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.modelo)
                </td>
                <td>
                    @foreach (var soc in listsubdivision)
                    {
                        if (soc.id == item.id_subdivision)
                        {
                            @Html.DisplayFor(modelItem => soc.nombre)
                        }
                    }
                </td>
                <td>
                    @if (item.status == 1)
                    {
                        var variable = "Activo";
                        @Html.DisplayFor(modelItem => variable)
                    }
                    else
                    {
                        var variable = "Inactivo";
                        @Html.DisplayFor(modelItem => variable)
                    }
                    
                </td>
                <td class="text-right">
                    <div class="td-icon-table">
                        <a href="@Url.Action("Edit", "biometrico" , new { id=item.id })"><span class="glyphicon glyphicon-edit"></span></a>
                        <a href="#" onclick="return deleteobject('@Html.DisplayFor(modelItem => item.id)', 'biometrico')" ><span class="glyphicon glyphicon-trash"></span></a>
                    </div>
                </td>
            </tr>
        }
    </table>
</div>

<div class="form-group">
    @if (Model.Resultado.Count() > 0)
    {
        <span class="paginador">
            <strong>@Model.TotalRegistros</strong> registros encontrados
        </span>
        <span class="paginador">&nbsp;|&nbsp;</span>
        <span class="paginador">
            Página <strong>@(Model.PaginaActual)</strong> de 
            <strong>@Model.TotalPaginas</strong>
        </span>
        <span class="paginador">&nbsp;|&nbsp;</span>
    }
    else
    {
        <span class="paginador">No hay resultados para esta búsqueda</span>
        <span class="paginador">&nbsp;|&nbsp;</span>
    }

    @if (Model.PaginaActual > 1)
    {
        @Html.ActionLink("<<", "Index", new { 
                p = 1,
                dirIp = Model.tempVar.dirIp,
                modelo = Model.tempVar.modelo,
                subdiv = Model.tempVar.subdivision,
                status = Model.tempVar.status },
                        new { @class = "btn btn-sm btn-default" })
        <span></span>
        @Html.ActionLink("Anterior", "Index", new { 
                p = Model.PaginaActual - 1,
                dirIp = Model.tempVar.dirIp,
                modelo = Model.tempVar.modelo,
                subdiv = Model.tempVar.subdivision,
                status = Model.tempVar.status },
                        new { @class = "btn btn-sm btn-default" })
    }
    else
    {
        @Html.ActionLink("<<", "Index", new { p = 1 },
                        new { @class = "btn btn-sm btn-default disabled" })
        <span></span>
        @Html.ActionLink("Anterior", "Index", new { p = 1 },
                        new { @class = "btn btn-sm btn-default disabled" })
    }
    <span></span>
    @if (Model.PaginaActual < Model.TotalPaginas)
    {
        @Html.ActionLink("Siguiente", "Index", new { 
                p = Model.PaginaActual + 1,
                dirIp = Model.tempVar.dirIp,
                modelo = Model.tempVar.modelo,
                subdiv = Model.tempVar.subdivision,
                status = Model.tempVar.status },
                        new { @class = "btn btn-sm btn-default" })
        <span></span>
        @Html.ActionLink(">>", "Index", new { 
                p = Model.TotalPaginas,
                dirIp = Model.tempVar.dirIp,
                modelo = Model.tempVar.modelo,
                subdiv = Model.tempVar.subdivision,
                status = Model.tempVar.status },
                        new { @class = "btn btn-sm btn-default" })
    }
    else
    {
        @Html.ActionLink("Siguiente", "Index", new { p = Model.TotalPaginas - 1 },
                        new { @class = "btn btn-sm btn-default disabled" })
        <span></span>
        @Html.ActionLink(">>", "Index", new { p = Model.TotalPaginas },
                        new { @class = "btn btn-sm btn-default disabled" })
    }
</div>